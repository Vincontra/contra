 SQL Questions
Types of Keys

Primary Key â€“ Uniquely identifies each record

Candidate Key â€“ Eligible to be a primary key

Foreign Key â€“ Links two tables

Composite Key â€“ Combination of two/more columns

Alternate Key â€“ Remaining candidate keys after selecting the primary key

Strong / Weak Entity

Strong Entity â€“ Can exist without another entity

Weak Entity â€“ Depends on a strong entity (has no primary key of its own)

SQL Statement Types

DDL â€“ Define structure (CREATE, ALTER, DROP)

DML â€“ Manage data (INSERT, UPDATE, DELETE)

DCL â€“ Control access (GRANT, REVOKE)

SQL Objects

Table â€“ Stores data

View â€“ Virtual table from a query

Sequence â€“ Auto-generates numbers

Index â€“ Speeds up data retrieval

Synonym â€“ Alias for an object

Trigger â€“ Executes on data events

Types of SQL Index

Implicit Index â€“ Auto-created (e.g., primary key)

Explicit Index â€“ Created manually using CREATE INDEX

Group / Aggregate Functions

COUNT() â€“ Number of rows

MIN() â€“ Smallest value

MAX() â€“ Largest value

AVG() â€“ Average

SUM() â€“ Total sum

Types of JOIN

INNER JOIN â€“ Matching rows

LEFT JOIN â€“ All from left + matched from right

RIGHT JOIN â€“ All from right + matched from left

FULL JOIN â€“ All rows from both

CROSS JOIN â€“ Cartesian product

SQL vs PL/SQL

SQL â€“ Declarative, for querying

PL/SQL â€“ Procedural, supports loops, conditions, logic

Procedure vs Function

Procedure â€“ May/may not return value

Function â€“ Must return a value

Types of Cursors

Implicit â€“ Auto-created for simple queries

Explicit â€“ Manually defined for complex row-by-row handling

Trivial Functional Dependency

A â†’ B, if B is a subset of A (e.g., A = {ID, Name}, B = {ID})

Armstrong's Axioms

Reflexivity: A âŠ‡ B â†’ A â†’ B

Augmentation: A â†’ B â†’ AC â†’ BC

Transitivity: A â†’ B, B â†’ C â†’ A â†’ C

ðŸ”¹ MongoDB / NoSQL Questions
Structured vs Unstructured Data

Structured â€“ Tables (SQL)

Unstructured â€“ Images, videos, docs, logs

Semi-Structured Data

Not in tables, but has tags or keys (e.g., JSON, XML)

SQL = Vertical Scaling

Add more power to one server
NoSQL = Horizontal Scaling

Add more servers (sharding)

Replacing JOINs in NoSQL

Use Embedded Documents inside collections

Full Form of JSON

JavaScript Object Notation

Properties of MongoDB

Schema-less

Uses BSON

High availability

Auto-sharding

Rich query language

Use of $or and $in

$or: Matches if any condition is true

$in: Matches field values in a given array
Difference: $or checks multiple fields; $in checks one field with multiple values.

5 Vâ€™s of Big Data

Volume, Velocity, Variety, Veracity, Value

ACID Properties

Atomicity â€“ All or nothing

Consistency â€“ Valid state

Isolation â€“ Transactions donâ€™t affect each other

Durability â€“ Data is saved permanently

Codd's Rules (short summary)

12 rules define what a relational DB should support (e.g., logical data independence, integrity rules, systematic treatment of nulls, etc.)